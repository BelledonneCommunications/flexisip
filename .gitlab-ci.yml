variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DEFAULT_CMAKE_OPTIONS: -DENABLE_CONFERENCE=ON -DENABLE_JWE_AUTH_PLUGIN=ON -DENABLE_PRESENCE=ON -DENABLE_PROTOBUF=ON -DENABLE_SNMP=ON -DENABLE_SOCI=ON -DENABLE_TRANSCODER=ON


.linux-ccache:
  cache:
    key: $CI_JOB_NAME
    paths:
      - ccache/

  before_script:
    - mkdir -p ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache


.job-linux:

  tags: [ "docker" ]

  extends: .linux-ccache

  script:
    - export CC=$CC
    - export CXX=$CXX
    - ccache -s
    - ./prepare.py -G "$CMAKE_GENERATOR" -cc $DEFAULT_CMAKE_OPTIONS $CMAKE_OPTIONS
    - cmake --build WORK/flexisip/cmake -- $ADDITIONAL_BUILD_OPTIONS
    - ccache -s


.scheduled-job-linux:

  extends: .job-linux
  only:
    - schedules


job-debian9-makefile-gcc:

  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian:9
  variables:
    CMAKE_GENERATOR: Unix Makefiles
    CC: gcc
    CXX: g++
  extends: .scheduled-job-linux


job-debian9-makefile-clang:

  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian:9
  variables:
    CMAKE_GENERATOR: Unix Makefiles
    CC: clang
    CXX: clang++
  extends: .scheduled-job-linux


job-debian9-ninja-gcc:

  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian:9
  variables:
    CMAKE_GENERATOR: Ninja
    CC: gcc
    CXX: g++
  extends: .job-linux


job-debian9-ninja-clang:

  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian:9
  variables:
    CMAKE_GENERATOR: Ninja
    CC: clang
    CXX: clang++
  extends: .job-linux


.job-macosx:

  tags: [ "macosx" ]

  script:
    - ccache -s
    - python prepare.py -G "$CMAKE_GENERATOR" -cc $DEFAULT_CMAKE_OPTIONS $CMAKE_OPTIONS
    - cmake --build WORK/flexisip/cmake -- $ADDITIONAL_BUILD_OPTIONS
    - ccache -s


.scheduled-job-macosx:

  extends: .job-macosx
  only:
    - schedules


job-macosx-makefile:

  variables:
    CMAKE_GENERATOR: Unix Makefiles
  extends: .scheduled-job-macosx


job-macosx-ninja:

  variables:
    CMAKE_GENERATOR: Ninja
  extends: .job-macosx


job-macosx-xcode:

  tags: [ "macosx" ]

  only:
    - schedules
  script:
    - python prepare.py -G Xcode -cc $DEFAULT_CMAKE_OPTIONS $CMAKE_OPTIONS
    - cmake --build WORK/flexisip/cmake -- -IDEBuildOperationMaxNumberOfConcurrentCompileTasks=`sysctl -n hw.ncpu`
