variables:
  DEBIAN12_CMAKE_OPTIONS: -DINTERNAL_LIBHIREDIS=ON -DENABLE_G729=ON

.debian12-image:
  image:
    name: gitlab.linphone.org:4567/bc/public/flexisip/bc-dev-debian12:$DEBIAN_12_IMAGE_VERSION
  variables:
    CMAKE_OPTIONS: ${DEBIAN12_CMAKE_OPTIONS}

#################################################
# Makefile
#################################################

job-debian12-makefile-gcc:
  extends:
    - .job-makefile-gcc
    - .debian12-image
    - .rules-manual  # âš  See `rules.yml`, override .job-makefile-gcc rules


job-debian12-makefile-clang:
  extends:
    - .job-makefile-clang
    - .debian12-image
    - .rules-manual  # âš  See `rules.yml`, override .job-makefile-clang rules

#################################################
# Ninja
#################################################

job-debian12-ninja-gcc:
  extends:
    - .job-ninja-gcc
    - .debian12-image
    # Debian 12 packages GCC 12 (fitting!) for which our cmake has special-caseing,
    # so let's override the .job-ninja-gcc rules to run it in dev pipelines
    - .rules-dev  # âš  See `rules.yml`
  variables:
    CMAKE_OPTIONS: ${DEBIAN12_CMAKE_OPTIONS}


job-debian12-ninja-clang:
  extends:
    - .job-ninja-clang
    - .debian12-image
    - .tester-artifacts
  variables:
    CMAKE_OPTIONS: ${DEBIAN12_CMAKE_OPTIONS} -DENABLE_UNIT_TESTS=ON -DENABLE_COVERAGE=ON

#################################################
# UNIT TESTS
#################################################

job-debian12-unit-test:
  extends:
    - .unit-test
    - .debian12-image
  needs:
    - job-debian12-ninja-clang
  after_script:
    - ls -lah #default.profraw should exist
    - llvm-profdata merge -sparse default.profraw -o default.profdata
  artifacts:
    when: always
    paths:
      - default.profdata
      - work/lib/libflexisip.so
      - ${LOGS_DIR}/*

debian12-coverage:
  stage: coverage ðŸ“‘
  tags: [ "docker-test-flexisip" ]
  extends:
    - .rules-dev
    - .debian12-image
  needs:
    - job-debian12-unit-test
  variables:
    TERM: xterm-color
    LLVM_COV_OPTIONS: >
      -instr-profile=default.profdata
      include/flexisip
      src
      --ignore-filename-regex=cJSON
      --ignore-filename-regex=libxsd
      --ignore-filename-regex=linphone-sdk
      --ignore-filename-regex=src/lib/
      --ignore-filename-regex=src/tclap
      --ignore-filename-regex=src/xml
      --ignore-filename-regex=submodules
  script:
    - export SO_FILE=$PWD/work/lib/libflexisip.so
    - echo "Full coverage of Flexisip library"
    - llvm-cov show $SO_FILE $LLVM_COV_OPTIONS -use-color > flexisip_coverage_lines_full.txt
    - echo "Display coverage by file of Flexisip library"
    - llvm-cov report $SO_FILE $LLVM_COV_OPTIONS -use-color | tee flexisip_coverage_report_by_file.txt
    - echo "filtering work of report to get global coverage %"
    - cat flexisip_coverage_report_by_file.txt | grep -E "TOTAL" | grep -Po "\d+\.\d+\%" | sed -n '3p'
    - echo "Export results in JSON format"
    - llvm-cov export $SO_FILE $LLVM_COV_OPTIONS -format=text > flexisip_coverage_export.txt
    - echo "Export results in Lcov format"
    - llvm-cov export $SO_FILE $LLVM_COV_OPTIONS -format=lcov > flexisip_coverage_export.lcov
    - lcov_cobertura flexisip_coverage_export.lcov
  coverage: '/[0-9][0-9]\.[0-9]+\%/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - default.profdata
      - flexisip_coverage_report_by_file.txt
      - flexisip_coverage_lines_full.txt
      - flexisip_coverage_export.lcov
      - flexisip_coverage_export.txt
      - coverage.xml
    expire_in: 1 week

#################################################
# DEB
#################################################

job-debian12-deb:
  extends:
    - .job-linux-deb
    - .debian12-image
  needs:
    - job: job-debian12-unit-test
      optional: true
      artifacts: false
    - job: job-debian12-ninja-clang
      optional: true
      artifacts: false

# Test installation of the DEB package and check its feature list
job-debian12-deb-check-features:
  stage: check-package ðŸ“¤
  tags: [ "docker" ]
  image: debian:12
  rules:
    - !reference [job-debian12-deb, rules]
  needs:
    - job: job-debian12-deb
  variables:
    GIT_STRATEGY: none
  script:
    - apt update
    - apt install -y ./build/*.deb
    - !reference [.script-check-features, script]

job-debian12-deb-deploy:
  extends:
    - .job-deploy
    - .debian12-image
  variables:
    DISTRIB: debian
    RELEASE: bookworm
  dependencies:
    - job-debian12-deb
